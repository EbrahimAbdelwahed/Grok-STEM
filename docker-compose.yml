
version: '3.8'

services:
  # Qdrant Vector Database Service
  qdrant:
    image: qdrant/qdrant:latest
    container_name: grok_stem_qdrant
    ports:
      - "6333:6333" # REST API
      - "6334:6334" # gRPC (Optional, but good practice if used)
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - grok_stem_network
    restart: unless-stopped
    # *** ADD HEALTHCHECK ***
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333"] # Simple check on REST port
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s # Give it time to start initially

  # Backend Service (FastAPI)
  backend:
    container_name: grok_stem_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
    env_file:
      - ./backend/.env
    environment:
      - PYTHONPATH=/app
    networks:
      - grok_stem_network
    depends_on:
      qdrant:
        # *** CHANGE CONDITION ***
        condition: service_healthy # Wait for Qdrant to pass health check
    restart: unless-stopped
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Service (React/Vite) - No changes needed here
  frontend:
    container_name: grok_stem_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - grok_stem_network
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_WEBSOCKET_URL=ws://localhost:8000/ws # Adjust if needed

volumes:
  qdrant_storage:

networks:
  grok_stem_network:
    driver: bridge